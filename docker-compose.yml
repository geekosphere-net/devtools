version: "3.3"

services:

  traefik:
    image: traefik:v2.9
    restart: unless-stopped
    env_file:
      - ./traefik/traefik.env # contains the GoDaddy API Key and Secret
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=true
      - --providers.docker.defaultRule=Host(`{{if index .Labels "com.docker.compose.service" }}{{ index .Labels "com.docker.compose.service" }}.l.geekosphere.net{{else}}{{ trimPrefix `/` .Name }}.l.geekosphere.net{{end}}`)
      - --entrypoints.webinsecure.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.traefik.address=:8080
      - --providers.file.directory=/traefik/config
      - --providers.file.watch=true
      - --experimental.hub=true
      - --hub.tls.insecure=true
      - --metrics.prometheus.addrouterslabels=true
      - --certificatesresolvers.wildcard-godaddy.acme.dnschallenge=true
      - --certificatesResolvers.wildcard-godaddy.acme.dnsChallenge.provider=godaddy
      - --certificatesResolvers.wildcard-godaddy.acme.dnsChallenge.delayBeforeCheck=0
      - --certificatesResolvers.wildcard-godaddy.acme.dnsChallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      - --certificatesresolvers.wildcard-godaddy.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.wildcard-godaddy.acme.storage=/traefik/certs/acme.json
      - --log.level=WARN
      #- --accessLog=true
      #- --accessLog.filePath=/traefik/logs/access.log
      #- --accessLog.bufferingSize=100
      #- --accessLog.filters.statusCodes=204-299,400-499,400-499
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/traefik
    labels:
      - traefik.enable=true
      # HTTPS redirect
      - traefik.http.routers.http-catchall.entrypoints=webinsecure
      - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      # HTTP Router
      - traefik.http.routers.traefik-secure.entrypoints=websecure
      - traefik.http.routers.traefik-secure.rule=Host(`traefik.l.geekosphere.net`)
      - traefik.http.routers.traefik-secure.tls=true
      - traefik.http.routers.traefik-secure.tls.certresolver=wildcard-godaddy
      - traefik.http.routers.traefik-secure.tls.domains[0].main=*.l.geekosphere.net
      - traefik.http.routers.traefik-secure.tls.domains[0].sans=l.geekosphere.net
      - traefik.http.routers.traefik-secure.service=api@internal
    networks:
      - proxy


  hub-agent:
    image: ghcr.io/traefik/hub-agent-traefik:v1.0.0
    restart: on-failure
    command:
      - run
      - --hub.token=${TRAEFIK_HUB_TOKEN}
      - --auth-server.advertise-url=http://hub-agent
      - --traefik.host=traefik
      - --traefik.tls.insecure=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      traefik:
        condition: service_started
        #condition: service_healthy
        #condition: service_completed_successfully
    networks:
      - proxy


  httpbin:
    image: kennethreitz/httpbin:latest
    restart: unless-stopped
    labels:
        - traefik.http.routers.httpbin.tls=true
        - traefik.http.routers.httpbin.tls.certresolver=wildcard-godaddy
    depends_on:
      - traefik
    networks:
      - proxy


  dwplay:
    image: dnr/dwplay:V1.0.24-V2.5.0-SNAPSHOT
    #image: dnr/dwplay:2.5.0-SNAPSHOT
    #image: "machaval/dw-playground:2.3.1-SNAPSHOT"
    restart: unless-stopped
    labels:
      - traefik.http.routers.dwplay.tls=true
      - traefik.http.routers.dwplay.tls.certresolver=wildcard-godaddy
    depends_on:
      - traefik
    networks:
      - proxy

  flex-gateway:
    image: mulesoft/flex-gateway
    restart: unless-stopped
    labels:
      - traefik.http.routers.flex-gateway.tls=true
      - traefik.http.routers.flex-gateway.tls.certresolver=wildcard-godaddy
      - traefik.http.services.flex-gateway-detools.loadbalancer.server.port=8081
    environment:
      - FLEX_NAME=drichards-2
    volumes:
      - /mnt/d/docker/flex-gateway:/usr/local/share/mulesoft/flex-gateway/conf.d
    depends_on:
      - traefik
    networks:
      - proxy

networks:
  proxy:
    external: true

